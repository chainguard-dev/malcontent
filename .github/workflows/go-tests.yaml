# Copyright 2024 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: Go Tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  test:
    runs-on: mal-ubuntu-latest-8-core
    env:
      PKG_CONFIG_PATH: ${{ github.workspace }}
      LD_LIBRARY_PATH: ${{ github.workspace }}
    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version-file: go.mod
          check-latest: true

      - uses: chainguard-dev/actions/goimports@9d943fc9889a0c0795e3c2bd4b949a9b610ac02e # main

      - name: install dependencies
        run: |
          sudo apt update && sudo apt install xz-utils -y

      - name: Clone yara-x
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: VirusTotal/yara-x
          path: yara-x

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@315e265cd78dad1e1dcf3a5074f6d6c47029d5aa # ???
        with:
          toolchain: stable

      - name: Install yara-x-capi
        run: |
          cd ${{ github.workspace }}/yara-x
          cargo install cargo-c
          cargo cinstall -p yara-x-capi --release --pkgconfigdir=${{ github.workspace }} --includedir=${{ github.workspace }} --libdir=${{ github.workspace }}
          cd ${{ github.workspace }}
      - name: Unit tests
        run: |
          make test

      - name: Integration tests
        run: |
          make integration
