# Copyright 2025 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: "CodeQL Advanced"

on:
  pull_request:
  push:
    branches: ["main"]
  schedule:
    - cron: "35 23 * * 0"

env:
  CODEQL_EXTRACTOR_GO_BUILD_TRACING: "on"

permissions: {}

jobs:
  analyze:
    if: ${{ github.repository }} == 'chainguard-dev/malcontent'
    runs-on: mal-ubuntu-latest-8-core
    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Checkout virusTotal/yara-x
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          fetch-tags: true
          repository: virusTotal/yara-x
          path: yara-x
          ref: refs/tags/v1.8.0
      - name: Install Rust for yara-x-capi
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: stable
      - name: Install cargo-c and yara-x-capi
        run: |
          cd ${{ github.workspace }}/yara-x
          cargo install cargo-c --locked
          sudo -E env "PATH=$PATH" cargo cinstall -p yara-x-capi --features=native-code-serialization --release
          sudo ldconfig -v
          cd ${{ github.workspace }}
          sudo rm -rf ${{ github.workspace }}/yara-x
      - name: Set up Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: "go.mod"
          check-latest: true
          cache: false
      - name: Initialize CodeQL
        uses: github/codeql-action/init@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          languages: go
          build-mode: manual
      - run: |
          go build -o /dev/null ./...
          go test -o /dev/null -c ./...
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          category: "/language:go"
  analyze-actions:
    if: ${{ github.repository }} == 'chainguard-dev/malcontent'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Initialize CodeQL
        uses: github/codeql-action/init@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          languages: actions
          build-mode: none
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          category: "/language:actions"
