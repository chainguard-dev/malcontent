name: Cut Release

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  VERSION_FILE: pkg/version/version.go

jobs:
  tag:
    if: ${{ github.repository }} == 'chainguard-dev/malcontent'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: chainguard-dev/actions/setup-gitsign@ae2f0393ff2a60c572ff4d3485f406e8f36dfd38
      - name: Set up Octo-STS
        uses: octo-sts/action@6177b4481c00308b3839969c3eca88c96a91775f # v1.0.0
        id: octo-sts
        with:
          scope: chainguard-dev/malcontent
          identity: release
      - name: Get Version
        id: get-version
        run: |
          VERSION=$(awk -F'"' '/ID string =/ {print $2}' "${VERSION_FILE}")
          if [[ ! "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: VERSION is not a valid semver"
            exit 1
          fi
          echo "VERSION=${VERSION}" >> "${GITHUB_OUTPUT}"
      - name: Create Release
        env:
          GH_TOKEN: ${{ steps.octo-sts.outputs.token }}
          VERSION: ${{ steps.get-version.outputs.VERSION }}
        if: ${{ steps.get-version.outputs.VERSION != '' }}
        run: |
          if [[ ! "${VERSION}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: VERSION is not a valid semver"
            exit 1
          fi
          git config --global tag.gpgsign true
          gh release create "${VERSION}" --title "${VERSION}" --notes "Release ${VERSION}" --draft
