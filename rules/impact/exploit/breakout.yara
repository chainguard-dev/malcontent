private rule container_managers {
  strings:
    $containerd = "github.com/containerd/containerd"
    $systemd    = "SYSTEMD_PROC_CMDLINE"
    $snapd      = "snapcore/snapd"

  condition:
    any of them
}

rule probable_container_breakout: high linux {
  meta:
    description = "probable container escape"

  strings:
    $x_docker_sock       = "docker.sock"
    $x_map_root_to_mnt   = "/:/mnt"
    $x_docker_mount_root = /docker run[ \w\-]* -v \/:/
    $x_cp_bin_bash       = "cp /bin/bash"
    $x_fdisk_grep        = "fdisk -l | grep"
    $x_proc1_status      = "/proc/1/status"
    $x_capsh_print       = "capsh --print"
    $x_capsysadmin       = "CAP_SYS_ADMIN"
    $x_notify_on_release = "notify_on_release"
    $x_apparmor          = "/sys/kernel/security/apparmor"
    $x_mount_cgroup      = "mount -t cgroup"
    $x_rdma_cgroup       = "rdma cgroup"
    $x_cgroup_procs      = "cgroup.procs"

    $not_systemd = "SYSTEMD_PROC_CMDLINE"

  condition:
    filesize < 1MB and 4 of ($x*) and none of ($not*) and not container_managers
}

rule possible_container_breakout: medium linux {
  meta:
    description = "possible container escape"

  strings:
    $docker_sock       = "docker.sock"
    $map_root_to_mnt   = "/:/mnt"
    $docker_mount_root = /docker run[ \w\-]* -v \/:/
    $cp_bin_bash       = "cp /bin/bash"
    $fdisk_grep        = "fdisk -l | grep"
    $proc1_status      = "/proc/1/status"
    $capsh_print       = "capsh --print"
    $capsysadmin       = "CAP_SYS_ADMIN"
    $notify_on_release = "notify_on_release"
    $apparmor          = "/sys/kernel/security/apparmor"
    $mount_cgroup      = "mount -t cgroup"
    $rdma_cgroup       = "rdma cgroup"
    $cgroup_procs      = "cgroup.procs"

  condition:
    filesize < 1MB and 3 of them and not container_managers
}
