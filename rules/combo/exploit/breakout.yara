private rule containerd {
  strings:
	$containerd = "github.com/containerd/containerd"
  condition:
	all of them
}

rule probable_container_breakout : high {
  meta:
    description = "probable container escape"
    hash_2024_enumeration_deepce = "76b0bcdf0ea0b62cee1c42537ff00d2100c54e40223bbcb8a4135a71582dfa5d"
    hash_2024_enumeration_linpeas = "210cbe49df69a83462a7451ee46e591c755cfbbef320174dc0ff3f633597b092"
  strings:
    $docker_sock = "docker.sock"
    $map_root_to_mnt = "/:/mnt"
    $docker_mount_root = /docker run[ \w\-]* -v \/:/
    $cp_bin_bash = "cp /bin/bash"
    $fdisk_grep = "fdisk -l | grep"
    $proc1_status = "/proc/1/status"
    $capsh_print = "capsh --print"
    $capsysadmin = "CAP_SYS_ADMIN"
    $notify_on_release = "notify_on_release"
    $apparmor = "/sys/kernel/security/apparmor"
    $mount_cgroup = "mount -t cgroup"
    $rdma_cgroup = "rdma cgroup"
    $cgroup_procs = "cgroup.procs"
  condition:
    3 of them and not containerd
}

rule possible_container_breakout : medium {
  meta:
    description = "possible container escape"
    hash_2024_enumeration_deepce = "76b0bcdf0ea0b62cee1c42537ff00d2100c54e40223bbcb8a4135a71582dfa5d"
    hash_2024_enumeration_linpeas = "210cbe49df69a83462a7451ee46e591c755cfbbef320174dc0ff3f633597b092"
  strings:
    $docker_sock = "docker.sock"
    $map_root_to_mnt = "/:/mnt"
    $docker_mount_root = /docker run[ \w\-]* -v \/:/
    $cp_bin_bash = "cp /bin/bash"
    $fdisk_grep = "fdisk -l | grep"
    $proc1_status = "/proc/1/status"
    $capsh_print = "capsh --print"
    $capsysadmin = "CAP_SYS_ADMIN"
    $notify_on_release = "notify_on_release"
    $apparmor = "/sys/kernel/security/apparmor"
    $mount_cgroup = "mount -t cgroup"
    $rdma_cgroup = "rdma cgroup"
    $cgroup_procs = "cgroup.procs"
  condition:
    2 of them and not containerd
}
